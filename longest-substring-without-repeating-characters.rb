require 'benchmark'

s = 'abcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcdbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbabcabcbbcdef'

Benchmark.bm do |benchmark|
  benchmark.report("Big String") do
    def length_of_longest_substring(s)
      result = 0
      length = s.length
      substring = {}
      (0...length).each do |index|
        if substring.key?(s[index])
          result = substring.length if substring.length > result
          substring = remove_elements_before(substring, substring[s[index]])
          substring[s[index]] = index
        else
          substring[s[index]] = index
        end
      end
      [substring.length, result].max
    end

    def remove_elements_before(sub_hash, index)
      sub_hash.each do |key, value|
        sub_hash.delete(key) if value <= index
      end
      sub_hash
    end

    puts length_of_longest_substring(s)
  end
end
